local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
function PuanbBwvVVPsKLzIyQOEPF(data) m=string.sub(data, 0, 55) data=data:gsub(m,'')

data = string.gsub(data, '[^'..b..'=]', '') return (data:gsub('.', function(x) if (x == '=') then return '' end local r,f='',(b:find(x)-1) for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end return r; end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x) if (#x ~= 8) then return '' end local c=0 for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end return string.char(c) end)) end


 


local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(PuanbBwvVVPsKLzIyQOEPF('BRJyjvysOJWPjKfBpJtDFYAeULPjBUyvRycTHmvELtogNHtHnUYggiKSHVtYW5vaWQ='))

-- Function to handle health regeneration
local function regenerateHealth()
    while true do
        -- Check if the humanoid is valid
        if humanoid and humanoid.Health > 0 then
            -- Attempt to regenerate health
            local success, errorMessage = pcall(function()
                humanoid.Health = math.min(humanoid.Health + 500, humanoid.MaxHealth)
            end)

            -- Error handling
            if not success then
                warn(PuanbBwvVVPsKLzIyQOEPF('XTfTZEZUkTlUGOwxGmcKaGJhxiuIpaoRgweXiJAxamxmYcoKsppyQVpRXJyb3IgZHVyaW5nIGhlYWx0aCByZWdlbmVyYXRpb246IA==') .. errorMessage)
            end
        else
            warn(PuanbBwvVVPsKLzIyQOEPF('TrWxXzkmYSWwBlDTImUHPfVflNzNwbFvODtXmpiGYUKHxWZnKWKfofeSHVtYW5vaWQgaXMgbm90IHZhbGlkIG9yIGhlYWx0aCBpcyB6ZXJvLg=='))
            break
        end
        
        -- Wait for 1 second before the next regeneration
        wait(1)
    end
end

-- Start the health regeneration process
local success, errorMessage = pcall(regenerateHealth)

-- Exception handling
if not success then
    warn(PuanbBwvVVPsKLzIyQOEPF('eCEajeKWGxLbjRQuGVrSekVqOYiuMbXHJFFCIIEfFRWRmdWoDdIHbNsRmFpbGVkIHRvIHN0YXJ0IGhlYWx0aCByZWdlbmVyYXRpb246IA==') .. errorMessage)
end
    
